import tensorflow as tf
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
from tensorflow.keras.models import Model

# Load pre-trained ResNet50 without top layers
base_model = ResNet50(weights='imagenet', include_top=False, input_shape=(224, 224, 3))

# Add custom output layer for regression (calorie estimation)
x = GlobalAveragePooling2D()(base_model.output)
x = Dense(128, activation='relu')(x)
calorie_output = Dense(1, activation='linear')(x)

# Create the final model
model = Model(inputs=base_model.input, outputs=calorie_output)

# Compile the model
model.compile(optimizer='adam', loss='mean_squared_error')

# Train the model using your food dataset
model.fit(train_images, train_calories, validation_data=(val_images, val_calories), epochs=10)

# Inference: Given a new food image, predict its calorie content
new_image = preprocess_image(new_image_path)
predicted_calories = model.predict(new_image)
